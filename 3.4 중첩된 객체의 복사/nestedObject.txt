<code>					<name>			<value>
var o1={name:'kim', score:[1,2]};	o1 --------------------> {name:'kim'
								  score :  -------> [1,2]
								  }              /
var o2=Object.assign({}, o1);		o2 --------------------> {name: 'kim'   /
								  score : ------    
								  }

Object.assign()을 사용하여 복제를 할때, 객체의 property(primitive type)의 내용만 복제 (별도의 메모리 주소)
					property(Objecct) 이면  위치를 복제 (기존에 있는 데이터의 주소)

o2.score.push(3)
// 실행 이후
<code>					<name>			<value>
var o1={name:'kim', score:[1,2]};	o1 --------------------> {name:'kim'
								  score :  -------> [1,2,3]
								  }              /
var o2=Object.assign({}, o1);		o2 --------------------> {name: 'kim'   /
								  score : ------    
								  }

o2.score = o2.score.concat()
var o1={name:'kim', score:[1,2]};	o1 --------------------> {name:'kim'
								  score :  -------> [1,2]
								  }              
var o2=Object.assign({}, o1);		o2 --------------------> {name: 'kim'   
								  score : --------> [1,2]    
								  }						
o2.score = Object.assign({}, o2.score); 하면 array 객체의 특성이 사라진다.
concat()을 이용하여 복제를 한다. 

o2.score.push(3);
// 실행 이후
o2.score = o2.score.concat()
var o1={name:'kim', score:[1,2]};	o1 --------------------> {name:'kim'
								  score :  -------> [1,2]
								  }              
var o2=Object.assign({}, o1);		o2 --------------------> {name: 'kim'   
								  score : --------> [1,2,3]    
								  }
o2.score.push(3)							