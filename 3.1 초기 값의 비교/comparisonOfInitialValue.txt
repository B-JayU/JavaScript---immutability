<primitive type>
<code>		<name>			<value>
var p1 = 1;	   p1   --------------->    1
var p2 = 1; 	   p2   -------------/
	p1 === p2 // true

원시 (원자) 타입은 동일한 값이면 메모리에 한 번만 저장
메모리 주소에 관계없이 값의 일치만 확인함.
primitive 타입의 값 중에 1 은 항상 1이다 => 어떠한 다른 값으로 변할 수 없다. (불변 : immutable)

<Object>
<code>				<name>			<value>
var o1 = {name:'kim'}		  o1	------------->  {name:'kim'}
var o2 = {name:'kim'}		  o2	------------->  {name:'kim'}
	o1 === o2 // false (각자의 데이터)

Object 타입은 동일한 값이라도 메모리에 새롭게 생성
서로 다른 메모리 주소를 가리키게 된다.
객체는 객체 안에 여러 property가 존재하고 property의 값은 계속해서 변할 수 있다.
그렇기 때문에, 객체는 바뀔 가능성이 존재하므로 같은 객체라고 하더라도 별도로 생성해서 따로 보관하는 특성이 있다.(why?... )
	=> 가변성을 가지고 있다.
